# Generated by Django 5.2.5 on 2025-09-05 10:15

import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Amenity',
                'verbose_name_plural': 'Amenities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the destination (e.g., Paris, Goa).', max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the destination URL, generated from the name.', max_length=255, unique=True)),
                ('description', tinymce.models.HTMLField(help_text='A captivating description of the destination.')),
                ('country', models.CharField(max_length=100)),
                ('image', models.ImageField(help_text='A representative cover image for the destination.', upload_to='destination_images/')),
                ('best_time_to_visit', models.CharField(help_text="e.g., 'October to March'", max_length=100)),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this destination on the homepage.')),
            ],
            options={
                'verbose_name': 'Destination',
                'verbose_name_plural': 'Destinations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Enquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False, help_text='Mark as true when the enquiry has been addressed.')),
            ],
            options={
                'verbose_name': 'Enquiry',
                'verbose_name_plural': 'Enquiries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the customer.', max_length=100)),
                ('designation', models.CharField(blank=True, help_text="Customer's designation (e.g., 'Solo Traveler').", max_length=100)),
                ('content', models.TextField(help_text='The testimonial content.')),
                ('rating', models.PositiveSmallIntegerField(default=5, help_text='Rating from 1 to 5.')),
                ('is_approved', models.BooleanField(default=False, help_text='Only approved testimonials will be shown on the site.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the hotel.', max_length=200)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the hotel URL, generated from the name.', max_length=255, unique=True)),
                ('description', tinymce.models.HTMLField(help_text='A detailed description of the hotel.')),
                ('address', models.CharField(help_text='The physical address of the hotel.', max_length=255)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='The contact phone number for the hotel.', max_length=128, region=None)),
                ('email', models.EmailField(blank=True, help_text='The contact email for the hotel.', max_length=254)),
                ('price_per_night', models.DecimalField(decimal_places=2, help_text='Base cost for a one-night stay.', max_digits=10)),
                ('rating', models.DecimalField(decimal_places=1, help_text='Star rating from 1.0 to 5.0.', max_digits=2)),
                ('image', models.ImageField(help_text='The main representative (cover) image of the hotel.', upload_to='hotel_images/')),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this hotel on the homepage.')),
                ('is_available', models.BooleanField(default=True, help_text='Designates whether the hotel is currently accepting bookings.')),
                ('amenities', models.ManyToManyField(blank=True, help_text='Select the amenities available at this hotel.', related_name='hotels', to='my_app.amenity')),
                ('destination', models.ForeignKey(help_text='The destination where the hotel is located.', on_delete=django.db.models.deletion.CASCADE, related_name='hotels', to='my_app.destination')),
            ],
            options={
                'verbose_name': 'Hotel',
                'verbose_name_plural': 'Hotels',
                'ordering': ['-rating', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image.', max_length=200)),
                ('image', models.ImageField(help_text='The image file.', upload_to='gallery/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='my_app.destination')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='my_app.hotel')),
            ],
            options={
                'verbose_name': 'Gallery Image',
                'verbose_name_plural': 'Gallery Images',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('num_guests', models.PositiveIntegerField(default=1)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='my_app.hotel')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('detail', models.TextField()),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itinerary', to='my_app.destination')),
            ],
            options={
                'ordering': ['day'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the blog post.', max_length=200)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the post URL, generated from the title.', max_length=255, unique_for_date='published_at')),
                ('content', tinymce.models.HTMLField(help_text='The main content of the blog post.')),
                ('excerpt', models.TextField(blank=True, help_text='A short summary of the post for list pages.')),
                ('featured_image', models.ImageField(blank=True, help_text='A representative image for the blog post.', null=True, upload_to='blog_images/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time the post is published.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views', models.PositiveIntegerField(default=0, help_text='The number of times the post has been viewed.')),
                ('author', models.ForeignKey(help_text='The author of the post.', on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, help_text='The primary category of the blog post.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='my_app.category')),
                ('tags', models.ManyToManyField(blank=True, help_text='Tags related to the blog post.', related_name='posts', to='my_app.tag')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-published_at'],
            },
        ),
    ]
